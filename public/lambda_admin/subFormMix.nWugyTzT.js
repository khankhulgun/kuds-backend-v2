import{_ as c,cZ as f,c$ as g,d0 as w,d1 as h,o as i,c as a,c9 as m,j as u,F as S,l as p,k as y,W as b,a as I,cU as n}from"./entry.MJ5yZK23.js";const M={props:["f","model","editMode","relations","formula","schema","url","rowIndex"],emits:["edit"],created(){this.f.data={},this.f.schema.forEach(e=>{this.f.identity==e.model||e.formType==null||this.f.timestamp&&(e.model=="created_at"||e.model=="updated_at")||(this.editMode?this.setModel(e.model,this.model[e.model],e.formType):this.setModel(e.model,e.default,e.formType),this.$watch("model."+e.model,{handler:(t,o)=>{this.afterChange(e.model,t,o)},deep:!0}))})},methods:{isShowAble(e){if(this.schema){let t=this.schema.findIndex(o=>o.model==e);return t>=0?!this.schema[t].hidden:!1}return!0},element:f,setModel(e,t,o){switch(o){case"Switch":let d=!1;(t=="true"||t==1)&&(d=!0),this.model[e]=d,this.f.data[e]=d;break;case"Checkbox":let r=0;(t=="true"||t==1)&&(r=1),this.model[e]=r,this.f.data[e]=r;break;default:this.f.data[e]=t}},setMeta(e){return delete e.table,delete e.rules,delete e.label,delete e.span,delete e.default,e},getSchemaIndex(e){return this.f.schema.findIndex(t=>t.model==e)},afterChange(e,t,o){g(e,t,this.model,this.f.schema,this.$refs,this.$Notice),w(this.formula,e,this.model,this.f.schema,this.f.rule,this.f.model)},getSchemaRelationByModel(e){let t=this.f.schema.findIndex(o=>o.model==e);return t>=0?h(this.f.schema[t],this.relations):null},getRelation(e){return h(e,this.relations)},edit(){this.$emit("edit")}}},x={key:0,class:"row-number"},G={class:"action"};function B(e,t,o,d,r,l){return i(),a("tr",null,[o.f.showRowNumber?(i(),a("td",x,[m(e.$slots,"rowNumber")])):u("",!0),(i(!0),a(S,null,p(o.f.schema.filter(s=>typeof s.formType<"u"&&s.formType!==null&&s.model&&l.isShowAble(s.model)&&s.model!==o.f.identity&&s.model!==o.f.parent&&s.model!=="updated_at"&&s.model!=="created_at"&&!s.hidden),s=>(i(),a("td",{key:s.index},[o.model?(i(),y(b(l.element(s.formType)),{key:0,model:{form:o.model,component:s.model},url:o.url,size:"small",label:s.label!==""?s.label:`[${s.model}]`,meta:l.setMeta(s),getSchemaRelationByModel:l.getSchemaRelationByModel,onEdit:l.edit,relation_data:l.getRelation,rowIndex:o.rowIndex},null,40,["model","url","label","meta","getSchemaRelationByModel","onEdit","relation_data","rowIndex"])):u("",!0)]))),128)),I("td",G,[m(e.$slots,"action")])])}const P=c(M,[["render",B]]),R={data(){return{preSource:[],modal_grid_show:!1,user_condition:null,custom_condition:null,sourceGridParentBasedCondition:null}},mounted(){this.form.sourceGridUserCondition!==void 0&&this.form.sourceGridUserCondition!==null&&this.form.sourceGridUserCondition!=""&&(this.user_condition=JSON.parse(this.form.sourceGridUserCondition)),this.form.sourceGridParentBasedCondition!==void 0&&this.form.sourceGridParentBasedCondition!==null&&this.form.sourceGridParentBasedCondition!=""&&(this.sourceGridParentBasedCondition=JSON.parse(this.form.sourceGridParentBasedCondition))},methods:{showAddSourceModal(){if(this.sourceGridParentBasedCondition){this.custom_condition={};let e=!1;this.sourceGridParentBasedCondition.forEach(t=>{if(t.hasOwnProperty("parent_sub")&&t.hasOwnProperty("sub_filed")&&t.hasOwnProperty("grid_field"))if(this.model.form[t.parent_sub]&&this.model.form[t.parent_sub].length>=1){let o=this.model.form[t.parent_sub].map(d=>d[t.sub_filed]);o&&o.length>=1?this.custom_condition[t.grid_field]=o:(e=!0,n.error({message:this.lang.informationIsIncomplete,description:t.message}))}else e=!0,n.error({message:this.lang.informationIsIncomplete,description:t.message});else t.hasOwnProperty("parent_field")&&t.hasOwnProperty("grid_field")&&(this.model.form[t.parent_field]!==void 0&&this.model.form[t.parent_field]!==null?this.custom_condition[t.grid_field]=this.model.form[t.parent_field]:(e=!0,n.error({message:this.lang.informationIsIncomplete,description:t.message})))}),e||this.showAddSourceModalReal()}else this.showAddSourceModalReal()},showAddSourceModalReal(){this.modal_grid_show=!0},closeSourceModal(){this.modal_grid_show=!1},addFromPreSource(){this.preSource&&this.form.sourceGridTargetColumns&&this.preSource.forEach(e=>{this.createDataFromSource(e)}),this.closeSourceModal()},createDataFromSource(e){let t=_.cloneDeep(this.form),o={};t.schema.forEach(r=>{t.identity!==r.model&&r.formType!==null&&r.model!=="created_at"&&r.model!=="updated_at"&&r.default!==null&&(o[r.model]=r.default)}),this.form.sourceGridTargetColumns.forEach(r=>{o[r.selfColumn]=e[r.sourceColumn]});let d={form:t,model:o};this.model.form[this.model.component]==null&&(this.model.form[this.model.component]=[]),!(this.form.sourceUniqueField!==""&&this.form.sourceUniqueField!==void 0&&this.form.sourceUniqueField!==null&&this.model.form[this.model.component].findIndex(l=>l[this.form.sourceUniqueField]===o[this.form.sourceUniqueField])!==-1)&&(this.model.form[this.model.component].push(o),this.listData.push(d),this.rowLength=this.model.form[this.model.component].length)},onRowSelect(e){this.preSource=e},sourceGridUrl(){if(window.init)if(window.init.microserviceSettings){let e=window.init.microserviceSettings.findIndex(t=>t.project_id===this.form.sourceMicroserviceID);return e>=0?window.init.microserviceSettings[e].production_url:this.url}else return this.url;else return this.url}}};export{P as G,R as s};
